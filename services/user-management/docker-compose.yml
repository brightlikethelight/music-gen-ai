version: '3.8'

services:
  user-management:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: music-gen-user-management
    ports:
      - "8003:8003"
    environment:
      - DATABASE_URL=${DATABASE_URL:-postgresql://postgres:password@postgres:5432/user_management}
      - JWT_SECRET=${JWT_SECRET:-your-secret-key-change-in-production}
      - JWT_ALGORITHM=${JWT_ALGORITHM:-HS256}
      - JWT_EXPIRATION_HOURS=${JWT_EXPIRATION_HOURS:-24}
    volumes:
      - ./data:/app/data
    depends_on:
      - postgres
    restart: unless-stopped
    networks:
      - music-gen-network
    deploy:
      resources:
        limits:
          memory: 2G
        reservations:
          memory: 1G

  postgres:
    image: postgres:15-alpine
    container_name: music-gen-postgres
    ports:
      - "5432:5432"
    environment:
      - POSTGRES_DB=user_management
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD:-password}
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - music-gen-network
    restart: unless-stopped

  # Optional Redis for session management
  redis:
    image: redis:7-alpine
    container_name: music-gen-user-redis
    ports:
      - "6380:6379"
    volumes:
      - redis_data:/data
    networks:
      - music-gen-network
    restart: unless-stopped
    command: redis-server --appendonly yes

volumes:
  postgres_data:
    driver: local
  redis_data:
    driver: local

networks:
  music-gen-network:
    driver: bridge