apiVersion: v1
kind: Namespace
metadata:
  name: musicgen-workers

---
# Redis StatefulSet for persistence
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: redis
  namespace: musicgen-workers
spec:
  serviceName: redis
  replicas: 1
  selector:
    matchLabels:
      app: redis
  template:
    metadata:
      labels:
        app: redis
    spec:
      containers:
      - name: redis
        image: redis:7-alpine
        ports:
        - containerPort: 6379
        command:
          - redis-server
          - --appendonly
          - "yes"
          - --maxmemory
          - "4gb"
          - --maxmemory-policy
          - "allkeys-lru"
          - --requirepass
          - "$(REDIS_PASSWORD)"
        env:
        - name: REDIS_PASSWORD
          valueFrom:
            secretKeyRef:
              name: redis-auth
              key: password
        resources:
          requests:
            memory: "2Gi"
            cpu: "1"
          limits:
            memory: "4Gi"
            cpu: "2"
        volumeMounts:
        - name: redis-data
          mountPath: /data
        livenessProbe:
          exec:
            command:
            - redis-cli
            - ping
          initialDelaySeconds: 30
          periodSeconds: 10
        readinessProbe:
          exec:
            command:
            - redis-cli
            - ping
          initialDelaySeconds: 5
          periodSeconds: 5
  volumeClaimTemplates:
  - metadata:
      name: redis-data
    spec:
      accessModes: ["ReadWriteOnce"]
      resources:
        requests:
          storage: 50Gi

---
# Redis Service
apiVersion: v1
kind: Service
metadata:
  name: redis
  namespace: musicgen-workers
spec:
  selector:
    app: redis
  ports:
  - port: 6379
    targetPort: 6379
  clusterIP: None

---
# Secret for Redis authentication
apiVersion: v1
kind: Secret
metadata:
  name: redis-auth
  namespace: musicgen-workers
type: Opaque
stringData:
  password: "changeme"  # Replace with actual value in production

---
# Secret for sensitive worker configuration
apiVersion: v1
kind: Secret
metadata:
  name: flower-auth
  namespace: musicgen-workers
type: Opaque
stringData:
  basic_auth: "changeme"  # Replace with actual value in production

---
# ConfigMap for worker configuration
apiVersion: v1
kind: ConfigMap
metadata:
  name: worker-config
  namespace: musicgen-workers
data:
  USE_ADVANCED_REDIS: "true"
  MODEL_CACHE_DIR: "/app/models"

---
# PersistentVolumeClaim for model cache
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: model-cache
  namespace: musicgen-workers
spec:
  accessModes:
  - ReadWriteMany
  resources:
    requests:
      storage: 100Gi

---
# Critical Priority Worker Deployment
apiVersion: apps/v1
kind: Deployment
metadata:
  name: worker-critical
  namespace: musicgen-workers
spec:
  replicas: 1
  selector:
    matchLabels:
      app: worker-critical
  template:
    metadata:
      labels:
        app: worker-critical
        worker-type: critical
    spec:
      containers:
      - name: worker
        image: musicgen:latest
        command:
          - celery
          - -A
          - music_gen.workers.celery_app
          - worker
          - --hostname=critical@%h
          - --queues=critical
          - --concurrency=2
          - --pool=prefork
          - --max-tasks-per-child=10
          - --loglevel=info
        envFrom:
        - configMapRef:
            name: worker-config
        env:
        - name: REDIS_PASSWORD
          valueFrom:
            secretKeyRef:
              name: redis-auth
              key: password
        - name: REDIS_URL
          value: "redis://:$(REDIS_PASSWORD)@redis:6379/0"
        - name: CELERY_BROKER_URL
          value: "redis://:$(REDIS_PASSWORD)@redis:6379/0"
        - name: CELERY_RESULT_BACKEND
          value: "redis://:$(REDIS_PASSWORD)@redis:6379/0"
        resources:
          requests:
            memory: "2Gi"
            cpu: "2"
            nvidia.com/gpu: "1"
          limits:
            memory: "4Gi"
            cpu: "4"
            nvidia.com/gpu: "1"
        volumeMounts:
        - name: model-cache
          mountPath: /app/models
        - name: audio-temp
          mountPath: /tmp/musicgen
      volumes:
      - name: model-cache
        persistentVolumeClaim:
          claimName: model-cache
      - name: audio-temp
        emptyDir: {}
      nodeSelector:
        gpu: "true"

---
# High Priority Generation Worker Deployment
apiVersion: apps/v1
kind: Deployment
metadata:
  name: worker-generation-high
  namespace: musicgen-workers
spec:
  replicas: 2
  selector:
    matchLabels:
      app: worker-generation-high
  template:
    metadata:
      labels:
        app: worker-generation-high
        worker-type: generation-high
    spec:
      containers:
      - name: worker
        image: musicgen:latest
        command:
          - celery
          - -A
          - music_gen.workers.celery_app
          - worker
          - --hostname=generation-high@%h
          - --queues=generation-high,generation
          - --concurrency=2
          - --pool=prefork
          - --max-tasks-per-child=10
          - --autoscale=4,2
          - --loglevel=info
        envFrom:
        - configMapRef:
            name: worker-config
        env:
        - name: REDIS_PASSWORD
          valueFrom:
            secretKeyRef:
              name: redis-auth
              key: password
        - name: REDIS_URL
          value: "redis://:$(REDIS_PASSWORD)@redis:6379/0"
        - name: CELERY_BROKER_URL
          value: "redis://:$(REDIS_PASSWORD)@redis:6379/0"
        - name: CELERY_RESULT_BACKEND
          value: "redis://:$(REDIS_PASSWORD)@redis:6379/0"
        resources:
          requests:
            memory: "2Gi"
            cpu: "2"
            nvidia.com/gpu: "1"
          limits:
            memory: "4Gi"
            cpu: "4"
            nvidia.com/gpu: "1"
        volumeMounts:
        - name: model-cache
          mountPath: /app/models
        - name: audio-temp
          mountPath: /tmp/musicgen
      volumes:
      - name: model-cache
        persistentVolumeClaim:
          claimName: model-cache
      - name: audio-temp
        emptyDir: {}
      nodeSelector:
        gpu: "true"

---
# Normal Generation Worker HPA
apiVersion: autoscaling/v2
kind: HorizontalPodAutoscaler
metadata:
  name: worker-generation-hpa
  namespace: musicgen-workers
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: worker-generation
  minReplicas: 2
  maxReplicas: 10
  metrics:
  - type: Resource
    resource:
      name: cpu
      target:
        type: Utilization
        averageUtilization: 70
  - type: Resource
    resource:
      name: memory
      target:
        type: Utilization
        averageUtilization: 80
  behavior:
    scaleDown:
      stabilizationWindowSeconds: 300
      policies:
      - type: Percent
        value: 10
        periodSeconds: 60
    scaleUp:
      stabilizationWindowSeconds: 60
      policies:
      - type: Percent
        value: 50
        periodSeconds: 60

---
# Normal Generation Worker Deployment
apiVersion: apps/v1
kind: Deployment
metadata:
  name: worker-generation
  namespace: musicgen-workers
spec:
  replicas: 3
  selector:
    matchLabels:
      app: worker-generation
  template:
    metadata:
      labels:
        app: worker-generation
        worker-type: generation
    spec:
      containers:
      - name: worker
        image: musicgen:latest
        command:
          - celery
          - -A
          - music_gen.workers.celery_app
          - worker
          - --hostname=generation@%h
          - --queues=generation
          - --concurrency=2
          - --pool=prefork
          - --max-tasks-per-child=10
          - --loglevel=info
        envFrom:
        - configMapRef:
            name: worker-config
        env:
        - name: REDIS_PASSWORD
          valueFrom:
            secretKeyRef:
              name: redis-auth
              key: password
        - name: REDIS_URL
          value: "redis://:$(REDIS_PASSWORD)@redis:6379/0"
        - name: CELERY_BROKER_URL
          value: "redis://:$(REDIS_PASSWORD)@redis:6379/0"
        - name: CELERY_RESULT_BACKEND
          value: "redis://:$(REDIS_PASSWORD)@redis:6379/0"
        resources:
          requests:
            memory: "2Gi"
            cpu: "2"
            nvidia.com/gpu: "1"
          limits:
            memory: "4Gi"
            cpu: "4"
            nvidia.com/gpu: "1"
        volumeMounts:
        - name: model-cache
          mountPath: /app/models
        - name: audio-temp
          mountPath: /tmp/musicgen
      volumes:
      - name: model-cache
        persistentVolumeClaim:
          claimName: model-cache
      - name: audio-temp
        emptyDir: {}
      nodeSelector:
        gpu: "true"

---
# Audio Processing Worker Deployment
apiVersion: apps/v1
kind: Deployment
metadata:
  name: worker-processing
  namespace: musicgen-workers
spec:
  replicas: 2
  selector:
    matchLabels:
      app: worker-processing
  template:
    metadata:
      labels:
        app: worker-processing
        worker-type: processing
    spec:
      containers:
      - name: worker
        image: musicgen:latest
        command:
          - celery
          - -A
          - music_gen.workers.celery_app
          - worker
          - --hostname=processing@%h
          - --queues=processing
          - --concurrency=4
          - --pool=prefork
          - --max-tasks-per-child=50
          - --loglevel=info
        envFrom:
        - configMapRef:
            name: worker-config
        env:
        - name: REDIS_PASSWORD
          valueFrom:
            secretKeyRef:
              name: redis-auth
              key: password
        - name: REDIS_URL
          value: "redis://:$(REDIS_PASSWORD)@redis:6379/0"
        - name: CELERY_BROKER_URL
          value: "redis://:$(REDIS_PASSWORD)@redis:6379/0"
        - name: CELERY_RESULT_BACKEND
          value: "redis://:$(REDIS_PASSWORD)@redis:6379/0"
        resources:
          requests:
            memory: "1Gi"
            cpu: "2"
          limits:
            memory: "2Gi"
            cpu: "4"
        volumeMounts:
        - name: audio-temp
          mountPath: /tmp/musicgen
      volumes:
      - name: audio-temp
        emptyDir: {}

---
# Monitoring Worker Deployment
apiVersion: apps/v1
kind: Deployment
metadata:
  name: worker-monitoring
  namespace: musicgen-workers
spec:
  replicas: 1
  selector:
    matchLabels:
      app: worker-monitoring
  template:
    metadata:
      labels:
        app: worker-monitoring
        worker-type: monitoring
    spec:
      containers:
      - name: worker
        image: musicgen:latest
        command:
          - celery
          - -A
          - music_gen.workers.celery_app
          - worker
          - --hostname=monitoring@%h
          - --queues=monitoring,dead-letter
          - --concurrency=1
          - --pool=eventlet
          - --max-tasks-per-child=1000
          - --loglevel=info
        envFrom:
        - configMapRef:
            name: worker-config
        env:
        - name: REDIS_PASSWORD
          valueFrom:
            secretKeyRef:
              name: redis-auth
              key: password
        - name: REDIS_URL
          value: "redis://:$(REDIS_PASSWORD)@redis:6379/0"
        - name: CELERY_BROKER_URL
          value: "redis://:$(REDIS_PASSWORD)@redis:6379/0"
        - name: CELERY_RESULT_BACKEND
          value: "redis://:$(REDIS_PASSWORD)@redis:6379/0"
        resources:
          requests:
            memory: "512Mi"
            cpu: "500m"
          limits:
            memory: "1Gi"
            cpu: "1"

---
# Celery Beat Deployment
apiVersion: apps/v1
kind: Deployment
metadata:
  name: celery-beat
  namespace: musicgen-workers
spec:
  replicas: 1
  selector:
    matchLabels:
      app: celery-beat
  template:
    metadata:
      labels:
        app: celery-beat
    spec:
      containers:
      - name: beat
        image: musicgen:latest
        command:
          - celery
          - -A
          - music_gen.workers.celery_app
          - beat
          - --loglevel=info
        envFrom:
        - configMapRef:
            name: worker-config
        env:
        - name: REDIS_PASSWORD
          valueFrom:
            secretKeyRef:
              name: redis-auth
              key: password
        - name: REDIS_URL
          value: "redis://:$(REDIS_PASSWORD)@redis:6379/0"
        - name: CELERY_BROKER_URL
          value: "redis://:$(REDIS_PASSWORD)@redis:6379/0"
        - name: CELERY_RESULT_BACKEND
          value: "redis://:$(REDIS_PASSWORD)@redis:6379/0"
        resources:
          requests:
            memory: "256Mi"
            cpu: "250m"
          limits:
            memory: "512Mi"
            cpu: "500m"

---
# Flower Monitoring Service
apiVersion: apps/v1
kind: Deployment
metadata:
  name: flower
  namespace: musicgen-workers
spec:
  replicas: 1
  selector:
    matchLabels:
      app: flower
  template:
    metadata:
      labels:
        app: flower
    spec:
      containers:
      - name: flower
        image: musicgen:latest
        command:
          - celery
          - -A
          - music_gen.workers.celery_app
          - flower
          - --port=5555
        envFrom:
        - configMapRef:
            name: worker-config
        env:
        - name: REDIS_PASSWORD
          valueFrom:
            secretKeyRef:
              name: redis-auth
              key: password
        - name: REDIS_URL
          value: "redis://:$(REDIS_PASSWORD)@redis:6379/0"
        - name: CELERY_BROKER_URL
          value: "redis://:$(REDIS_PASSWORD)@redis:6379/0"
        - name: CELERY_RESULT_BACKEND
          value: "redis://:$(REDIS_PASSWORD)@redis:6379/0"
        env:
        - name: FLOWER_BASIC_AUTH
          valueFrom:
            secretKeyRef:
              name: flower-auth
              key: basic_auth
        ports:
        - containerPort: 5555
        resources:
          requests:
            memory: "256Mi"
            cpu: "250m"
          limits:
            memory: "512Mi"
            cpu: "500m"

---
# Flower Service
apiVersion: v1
kind: Service
metadata:
  name: flower
  namespace: musicgen-workers
spec:
  selector:
    app: flower
  ports:
  - port: 5555
    targetPort: 5555
  type: LoadBalancer

---
# Worker Monitoring Service Account
apiVersion: v1
kind: ServiceAccount
metadata:
  name: worker-monitor
  namespace: musicgen-workers

---
# Worker Monitoring Role
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: worker-monitor
  namespace: musicgen-workers
rules:
- apiGroups: ["apps"]
  resources: ["deployments", "deployments/scale"]
  verbs: ["get", "list", "watch", "update", "patch"]
- apiGroups: [""]
  resources: ["pods"]
  verbs: ["get", "list", "watch", "delete"]
- apiGroups: ["autoscaling"]
  resources: ["horizontalpodautoscalers"]
  verbs: ["get", "list", "watch", "update", "patch"]

---
# Worker Monitoring RoleBinding
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: worker-monitor
  namespace: musicgen-workers
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: worker-monitor
subjects:
- kind: ServiceAccount
  name: worker-monitor
  namespace: musicgen-workers