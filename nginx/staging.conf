# Nginx Configuration for Staging Environment
# Production-like load balancing, SSL, and security headers

user nginx;
worker_processes auto;
error_log /var/log/nginx/error.log warn;
pid /var/run/nginx.pid;

# Optimize for performance
worker_rlimit_nofile 65535;

events {
    worker_connections 4096;
    use epoll;
    multi_accept on;
}

http {
    include /etc/nginx/mime.types;
    default_type application/octet-stream;

    # Logging format
    log_format main '$remote_addr - $remote_user [$time_local] "$request" '
                   '$status $body_bytes_sent "$http_referer" '
                   '"$http_user_agent" "$http_x_forwarded_for" '
                   'rt=$request_time uct="$upstream_connect_time" '
                   'uht="$upstream_header_time" urt="$upstream_response_time"';

    access_log /var/log/nginx/access.log main;

    # Performance optimizations
    sendfile on;
    tcp_nopush on;
    tcp_nodelay on;
    keepalive_timeout 65;
    types_hash_max_size 2048;
    client_max_body_size 100M;

    # Gzip compression
    gzip on;
    gzip_vary on;
    gzip_min_length 1024;
    gzip_types
        text/plain
        text/css
        text/xml
        text/javascript
        application/json
        application/javascript
        application/xml+rss
        application/atom+xml
        image/svg+xml;

    # Rate limiting
    limit_req_zone $binary_remote_addr zone=api:10m rate=10r/s;
    limit_req_zone $binary_remote_addr zone=generation:10m rate=2r/s;
    limit_conn_zone $binary_remote_addr zone=connections:10m;

    # Upstream backend servers
    upstream musicgen_api {
        least_conn;
        server musicgen-api-1:8000 max_fails=3 fail_timeout=30s;
        server musicgen-api-2:8000 max_fails=3 fail_timeout=30s;
        
        # Health check (requires nginx-plus or custom module)
        # health_check interval=10s fails=3 passes=2;
        
        keepalive 32;
    }

    # Security headers map
    map $sent_http_content_type $content_security_policy {
        default "default-src 'self'; script-src 'self' 'unsafe-inline'; style-src 'self' 'unsafe-inline'; img-src 'self' data: https:; font-src 'self' https:; connect-src 'self'; media-src 'self' blob:; object-src 'none'; base-uri 'self'; form-action 'self'; frame-ancestors 'none'; upgrade-insecure-requests;";
    }

    # Main server block
    server {
        listen 80;
        server_name staging.musicgen-ai.local localhost;

        # Security headers
        add_header X-Frame-Options "DENY" always;
        add_header X-Content-Type-Options "nosniff" always;
        add_header X-XSS-Protection "1; mode=block" always;
        add_header Referrer-Policy "strict-origin-when-cross-origin" always;
        add_header Content-Security-Policy $content_security_policy always;
        add_header Permissions-Policy "accelerometer=(), camera=(), geolocation=(), gyroscope=(), magnetometer=(), microphone=(), payment=(), usb=()" always;

        # Remove server header
        server_tokens off;

        # Connection limits
        limit_conn connections 20;

        # Health check endpoint
        location /health {
            access_log off;
            return 200 "healthy\n";
            add_header Content-Type text/plain;
        }

        # Nginx status for monitoring
        location /nginx_status {
            stub_status on;
            access_log off;
            allow 172.20.0.0/16;  # Only allow from staging network
            deny all;
        }

        # API endpoints with rate limiting
        location /api/ {
            limit_req zone=api burst=20 nodelay;
            
            proxy_pass http://musicgen_api;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection 'upgrade';
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_cache_bypass $http_upgrade;

            # Timeouts
            proxy_connect_timeout 5s;
            proxy_send_timeout 60s;
            proxy_read_timeout 120s;

            # Buffer settings
            proxy_buffering on;
            proxy_buffer_size 8k;
            proxy_buffers 8 8k;
        }

        # Music generation endpoints with stricter rate limiting
        location /api/v1/generate {
            limit_req zone=generation burst=5 nodelay;
            
            proxy_pass http://musicgen_api;
            proxy_http_version 1.1;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;

            # Extended timeouts for generation
            proxy_connect_timeout 10s;
            proxy_send_timeout 300s;
            proxy_read_timeout 300s;
        }

        # WebSocket endpoints
        location /ws/ {
            proxy_pass http://musicgen_api;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "upgrade";
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;

            # WebSocket timeouts
            proxy_connect_timeout 7s;
            proxy_send_timeout 300s;
            proxy_read_timeout 300s;
        }

        # Static file serving with caching
        location /static/ {
            expires 1y;
            add_header Cache-Control "public, immutable";
            add_header X-Content-Type-Options nosniff;
            try_files $uri =404;
        }

        # Audio file downloads with range support
        location /downloads/ {
            expires 1h;
            add_header Cache-Control "public";
            add_header Accept-Ranges bytes;
            
            proxy_pass http://musicgen_api;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        # Metrics endpoint (restricted access)
        location /metrics {
            access_log off;
            allow 172.20.0.0/16;  # Only staging network
            deny all;
            
            proxy_pass http://musicgen_api;
            proxy_set_header Host $host;
        }

        # Block sensitive files
        location ~ /\. {
            deny all;
            access_log off;
            log_not_found off;
        }

        location ~ \.(sql|log|conf)$ {
            deny all;
            access_log off;
            log_not_found off;
        }

        # Default fallback
        location / {
            proxy_pass http://musicgen_api;
            proxy_http_version 1.1;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;

            proxy_connect_timeout 5s;
            proxy_send_timeout 60s;
            proxy_read_timeout 60s;
        }

        # Error pages
        error_page 404 /404.html;
        error_page 500 502 503 504 /50x.html;
        
        location = /50x.html {
            root /usr/share/nginx/html;
        }
    }

    # HTTPS server (for SSL testing)
    server {
        listen 443 ssl http2;
        server_name staging.musicgen-ai.local localhost;

        # SSL Configuration (self-signed for staging)
        ssl_certificate /etc/nginx/ssl/staging.crt;
        ssl_certificate_key /etc/nginx/ssl/staging.key;
        
        # Modern SSL configuration
        ssl_protocols TLSv1.2 TLSv1.3;
        ssl_ciphers ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384;
        ssl_prefer_server_ciphers off;
        ssl_session_cache shared:SSL:10m;
        ssl_session_timeout 1d;
        ssl_stapling off;  # Disabled for self-signed certs

        # HSTS header
        add_header Strict-Transport-Security "max-age=31536000; includeSubDomains" always;

        # Use same configuration as HTTP server
        include /etc/nginx/conf.d/common_locations.conf;
    }

    # Monitoring server for internal tools
    server {
        listen 8081;
        server_name localhost;
        
        access_log off;
        
        # Allow only from staging network
        allow 172.20.0.0/16;
        deny all;

        # Prometheus metrics
        location /prometheus/ {
            proxy_pass http://prometheus-staging:9090/;
            proxy_set_header Host $host;
        }

        # Grafana dashboards
        location /grafana/ {
            proxy_pass http://grafana-staging:3000/;
            proxy_set_header Host $host;
        }

        # Flower task monitoring
        location /flower/ {
            proxy_pass http://flower-staging:5555/;
            proxy_set_header Host $host;
        }

        # Kibana logs
        location /kibana/ {
            proxy_pass http://kibana-staging:5601/;
            proxy_set_header Host $host;
        }
    }
}