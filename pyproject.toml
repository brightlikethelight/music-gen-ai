[build-system]
requires = ["setuptools>=65", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "musicgen-unified"
version = "2.0.1"
description = "Unified MusicGen interface for AI music generation - Harvard CS 109B Final Project"
authors = [
    {name = "Bright Liu", email = "brightliu@college.harvard.edu"}
]
readme = "README.md"
license = {text = "MIT"}
requires-python = ">=3.10"
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "Intended Audience :: Science/Research",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Scientific/Engineering :: Artificial Intelligence",
    "Topic :: Multimedia :: Sound/Audio :: Sound Synthesis",
    "Topic :: Education",
]
keywords = [
    "music", "generation", "ai", "machine-learning", "deep-learning",
    "pytorch", "transformers", "audio", "musicgen", "harvard", "cs109b"
]
dependencies = [
    "numpy>=1.26.0,<2.0",
    "scipy>=1.14.0,<2.0",
    "torch>=2.2.0",
    "transformers>=4.43.0",
    "scikit-learn>=1.3.0",
    "soundfile>=0.12.0",
    "librosa>=0.10.0",
    "pydub>=0.25.0",
    "typer[all]>=0.9.0",
    "rich>=13.0.0",
    "pandas>=2.0.0",
]

[project.optional-dependencies]
dev = [
    "jupyter>=1.0.0",
    "ipywidgets>=8.0.0",
    "matplotlib>=3.6.0",
    "seaborn>=0.12.0",
    "tensorboard>=2.13.0",
    "pytest-cov>=4.0.0",
    "coverage>=7.0.0",
]
deployment = [
    "docker>=6.0.0",
    "gunicorn>=20.0.0",
    "prometheus-client>=0.16.0",
    "opentelemetry-api>=1.17.0",
    "opentelemetry-sdk>=1.17.0",
    "opentelemetry-exporter-prometheus>=1.12.0",
]

[project.scripts]
musicgen = "musicgen.cli:app"

[project.urls]
Homepage = "https://github.com/brightlikethelight/music-gen-ai"
Repository = "https://github.com/brightlikethelight/music-gen-ai"
Issues = "https://github.com/brightlikethelight/music-gen-ai/issues"
Documentation = "https://github.com/brightlikethelight/music-gen-ai/tree/main/docs"
"CS 109B Project" = "https://github.com/brightlikethelight/music-gen-ai/tree/main/docs/cs109b"

[tool.setuptools.packages.find]
where = ["src"]

[tool.setuptools.package-data]
musicgen = ["py.typed"]

[tool.black]
line-length = 100
target-version = ['py38', 'py39', 'py310', 'py311']
include = '\.pyi?$'
exclude = '''
/(
    \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | _build
  | buck-out
  | build
  | dist
)/
'''

[tool.isort]
profile = "black"
line_length = 100
multi_line_output = 3
include_trailing_comma = true
force_grid_wrap = 0
use_parentheses = true
ensure_newline_before_comments = true

[tool.mypy]
python_version = "3.8"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py", "*_test.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = [
    "--strict-markers",
    "--strict-config",
    "--verbose",
    "--tb=short",
    "--cov=music_gen",
    "--cov-report=term-missing",
    "--cov-report=html",
    "--cov-report=xml",
]
markers = [
    "unit: Unit tests",
    "integration: Integration tests",
    "slow: Slow tests",
    "gpu: Tests requiring GPU",
]

[tool.coverage.run]
source = ["music_gen"]
omit = [
    "*/tests/*",
    "*/test_*",
    "setup.py",
    "*/__init__.py",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
    "class .*\\bProtocol\\):",
    "@(abc\\.)?abstractmethod",
]

[tool.flake8]
max-line-length = 100
extend-ignore = [
    "E203",  # whitespace before ':'
    "W503",  # line break before binary operator
    "F401",  # imported but unused (temporarily ignore)
    "F841",  # local variable assigned but never used (temporarily ignore)
    "E722",  # do not use bare 'except' (temporarily ignore)
    "E712",  # comparison to True should be 'if cond is True:' or 'if cond:'
    "F811",  # redefinition of unused variable
    "W293",  # blank line contains whitespace
    "W605",  # invalid escape sequence
    "E402",  # module level import not at top of file
    "F541",  # f-string is missing placeholders
]
exclude = [
    ".git",
    "__pycache__",
    "build",
    "dist",
    ".venv",
    "venv",
    ".eggs",
    "*.egg",
]