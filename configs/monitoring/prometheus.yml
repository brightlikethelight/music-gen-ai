# Prometheus configuration for Music Gen AI monitoring
# Comprehensive scraping, alerting, and recording rules

global:
  scrape_interval: 15s
  evaluation_interval: 15s
  external_labels:
    cluster: 'musicgen-production'
    region: 'us-east-1'

# Alertmanager configuration
alerting:
  alertmanagers:
    - static_configs:
        - targets:
          - "alertmanager:9093"
      timeout: 10s
      api_version: v2

# Load recording and alerting rules
rule_files:
  - "rules/*.yml"
  - "alerts/*.yml"

# Scrape configurations
scrape_configs:
  # Prometheus self-monitoring
  - job_name: 'prometheus'
    static_configs:
      - targets: ['localhost:9090']
    scrape_interval: 30s
    metrics_path: /metrics

  # Music Gen AI main application
  - job_name: 'musicgen-api'
    static_configs:
      - targets: 
        - 'musicgen-api-1:8000'
        - 'musicgen-api-2:8000'
        - 'musicgen-api-3:8000'
    scrape_interval: 15s
    scrape_timeout: 10s
    metrics_path: /metrics
    honor_labels: true
    
    # Service discovery for Kubernetes
    # kubernetes_sd_configs:
    # - role: pod
    #   namespaces:
    #     names: ['musicgen']
    # relabel_configs:
    # - source_labels: [__meta_kubernetes_pod_annotation_prometheus_io_scrape]
    #   action: keep
    #   regex: true
    # - source_labels: [__meta_kubernetes_pod_annotation_prometheus_io_path]
    #   action: replace
    #   target_label: __metrics_path__
    #   regex: (.+)

  # Worker nodes for background tasks
  - job_name: 'musicgen-workers'
    static_configs:
      - targets:
        - 'worker-1:8001'
        - 'worker-2:8001'
        - 'worker-3:8001'
    scrape_interval: 30s
    metrics_path: /metrics

  # Database monitoring (PostgreSQL exporter)
  - job_name: 'postgres'
    static_configs:
      - targets: ['postgres-exporter:9187']
    scrape_interval: 30s

  # Redis monitoring
  - job_name: 'redis'
    static_configs:
      - targets: ['redis-exporter:9121']
    scrape_interval: 30s

  # Node exporter for system metrics
  - job_name: 'node-exporter'
    static_configs:
      - targets:
        - 'node-exporter-1:9100'
        - 'node-exporter-2:9100'
        - 'node-exporter-3:9100'
    scrape_interval: 15s

  # GPU monitoring (NVIDIA DCGM exporter)
  - job_name: 'gpu-metrics'
    static_configs:
      - targets: ['dcgm-exporter:9400']
    scrape_interval: 15s

  # Nginx/load balancer metrics
  - job_name: 'nginx'
    static_configs:
      - targets: ['nginx-exporter:9113']
    scrape_interval: 30s

  # Elasticsearch monitoring
  - job_name: 'elasticsearch'
    static_configs:
      - targets: ['elasticsearch-exporter:9114']
    scrape_interval: 30s

  # Kafka monitoring (if using Kafka for queuing)
  - job_name: 'kafka'
    static_configs:
      - targets: ['kafka-exporter:9308']
    scrape_interval: 30s

  # Blackbox exporter for endpoint monitoring
  - job_name: 'blackbox'
    metrics_path: /probe
    params:
      module: [http_2xx]
    static_configs:
      - targets:
        - https://api.musicgen.ai/health
        - https://musicgen.ai
    relabel_configs:
      - source_labels: [__address__]
        target_label: __param_target
      - source_labels: [__param_target]
        target_label: instance
      - target_label: __address__
        replacement: blackbox-exporter:9115

  # Custom business metrics endpoint
  - job_name: 'musicgen-business-metrics'
    static_configs:
      - targets: ['musicgen-api:8000']
    metrics_path: /api/v1/metrics/business
    scrape_interval: 60s

  # SLI/SLO metrics
  - job_name: 'musicgen-slo-metrics'
    static_configs:
      - targets: ['musicgen-api:8000']
    metrics_path: /api/v1/metrics/slo
    scrape_interval: 30s

# Storage configuration
storage:
  tsdb:
    path: /prometheus/data
    retention.time: 30d
    retention.size: 100GB
    
    # Compaction settings
    min-block-duration: 2h
    max-block-duration: 25h
    
    # Write-ahead log settings
    wal-compression: true

# Remote write for long-term storage (optional)
# remote_write:
#   - url: "https://prometheus-remote-write-endpoint.com/api/v1/write"
#     headers:
#       Authorization: "Bearer YOUR_TOKEN"
#     queue_config:
#       capacity: 2500
#       max_shards: 200
#       min_shards: 1
#       max_samples_per_send: 500
#       batch_send_deadline: 5s
#       min_backoff: 30ms
#       max_backoff: 100ms

# Remote read for querying external data (optional)
# remote_read:
#   - url: "https://prometheus-remote-read-endpoint.com/api/v1/read"
#     headers:
#       Authorization: "Bearer YOUR_TOKEN"