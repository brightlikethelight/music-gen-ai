# Logrotate configuration for Music Gen AI structured logs
# Manages log rotation, compression, and retention policies

# Global defaults
weekly
rotate 52
compress
delaycompress
missingok
notifempty
create 644 musicgen musicgen
sharedscripts
dateext
dateformat -%Y%m%d-%s

# Application logs
/var/log/musicgen/app.log {
    daily
    rotate 30
    size 100M
    maxage 90
    compress
    delaycompress
    missingok
    notifempty
    create 644 musicgen musicgen
    
    postrotate
        # Signal the application to reopen log files
        if [ -f /var/run/musicgen/app.pid ]; then
            kill -USR1 $(cat /var/run/musicgen/app.pid) 2>/dev/null || true
        fi
        
        # Signal systemd service to reload if using systemd
        systemctl reload musicgen-api 2>/dev/null || true
        
        # Restart rsyslog if needed
        systemctl restart rsyslog 2>/dev/null || true
    endscript
}

# Audit logs - keep longer for compliance
/var/log/musicgen/audit.log {
    daily
    rotate 365
    size 50M
    maxage 2555  # 7 years for compliance
    compress
    delaycompress
    missingok
    notifempty
    create 644 musicgen musicgen
    copytruncate
    
    # Don't rotate if file is smaller than 1MB
    minsize 1M
    
    postrotate
        # Archive to long-term storage
        if [ -n "$AUDIT_ARCHIVE_PATH" ]; then
            cp "$1" "$AUDIT_ARCHIVE_PATH/" 2>/dev/null || true
        fi
        
        # Send to compliance system
        if [ -n "$COMPLIANCE_WEBHOOK" ]; then
            curl -X POST "$COMPLIANCE_WEBHOOK" \
                -H "Content-Type: application/json" \
                -d "{\"event\":\"audit_log_rotated\",\"file\":\"$1\",\"timestamp\":\"$(date -Iseconds)\"}" \
                2>/dev/null || true
        fi
    endscript
}

# Performance logs
/var/log/musicgen/performance.log {
    daily
    rotate 30
    size 200M
    maxage 30
    compress
    delaycompress
    missingok
    notifempty
    create 644 musicgen musicgen
    
    postrotate
        # Process performance metrics for archival
        if [ -x /usr/local/bin/process-performance-logs ]; then
            /usr/local/bin/process-performance-logs "$1" &
        fi
    endscript
}

# Error logs - keep longer for debugging
/var/log/musicgen/error.log {
    daily
    rotate 90
    size 50M
    maxage 180
    compress
    delaycompress
    missingok
    notifempty
    create 644 musicgen musicgen
    
    # Don't rotate small error files
    minsize 1M
    
    postrotate
        # Alert on error log rotation (indicates many errors)
        if [ -s "$1" ]; then
            if [ -n "$ERROR_ALERT_WEBHOOK" ]; then
                curl -X POST "$ERROR_ALERT_WEBHOOK" \
                    -H "Content-Type: application/json" \
                    -d "{\"alert\":\"error_log_rotated\",\"file\":\"$1\",\"size\":$(stat -c%s \"$1\"),\"timestamp\":\"$(date -Iseconds)\"}" \
                    2>/dev/null || true
            fi
        fi
    endscript
}

# Fluentd buffer logs
/var/log/fluentd/*.log {
    daily
    rotate 7
    size 100M
    maxage 14
    compress
    delaycompress
    missingok
    notifempty
    create 644 fluentd fluentd
    copytruncate
    
    postrotate
        # Clean up old buffer files
        find /var/log/fluentd/buffer -name "*.log" -mtime +7 -delete 2>/dev/null || true
    endscript
}

# OpenTelemetry Collector logs
/var/log/otel/*.jsonl {
    daily
    rotate 14
    size 500M
    maxage 30
    compress
    delaycompress
    missingok
    notifempty
    create 644 otel otel
    copytruncate
}

# Nginx/reverse proxy logs (if applicable)
/var/log/nginx/musicgen*.log {
    daily
    rotate 30
    size 100M
    maxage 90
    compress
    delaycompress
    missingok
    notifempty
    create 644 nginx nginx
    sharedscripts
    
    postrotate
        # Test nginx configuration before reloading
        nginx -t && nginx -s reload 2>/dev/null || true
    endscript
}

# System logs related to musicgen
/var/log/musicgen/system.log {
    weekly
    rotate 52
    size 50M
    maxage 365
    compress
    delaycompress
    missingok
    notifempty
    create 644 root root
}

# Cleanup script logs
/var/log/musicgen/cleanup.log {
    monthly
    rotate 12
    size 10M
    maxage 365
    compress
    delaycompress
    missingok
    notifempty
    create 644 musicgen musicgen
}

# Backup logs
/var/log/musicgen/backup.log {
    monthly
    rotate 24
    size 20M
    maxage 730
    compress
    delaycompress
    missingok
    notifempty
    create 644 musicgen musicgen
}

# Monitoring logs
/var/log/musicgen/monitoring.log {
    daily
    rotate 14
    size 50M
    maxage 30
    compress
    delaycompress
    missingok
    notifempty
    create 644 musicgen musicgen
}

# Security logs (separate from audit for system-level security)
/var/log/musicgen/security.log {
    daily
    rotate 180
    size 20M
    maxage 1095  # 3 years
    compress
    delaycompress
    missingok
    notifempty
    create 644 root musicgen
    
    postrotate
        # Send to SIEM system
        if [ -n "$SIEM_ENDPOINT" ]; then
            curl -X POST "$SIEM_ENDPOINT/logs" \
                -H "Content-Type: application/json" \
                -H "Authorization: Bearer $SIEM_TOKEN" \
                --data-binary "@$1" \
                2>/dev/null || true
        fi
    endscript
}

# Scheduled tasks and cron logs
/var/log/musicgen/cron.log {
    weekly
    rotate 8
    size 10M
    maxage 60
    compress
    delaycompress
    missingok
    notifempty
    create 644 musicgen musicgen
}

# Database logs (if logging to file)
/var/log/musicgen/database.log {
    daily
    rotate 7
    size 100M
    maxage 14
    compress
    delaycompress
    missingok
    notifempty
    create 644 postgres postgres
    
    postrotate
        # Signal PostgreSQL to reopen log files
        systemctl reload postgresql 2>/dev/null || true
    endscript
}

# Cache logs (Redis, etc.)
/var/log/musicgen/cache.log {
    daily
    rotate 14
    size 50M
    maxage 30
    compress
    delaycompress
    missingok
    notifempty
    create 644 redis redis
}

# Include additional application-specific log rotation configs
include /etc/logrotate.d/musicgen-custom

# Global postrotate script for all musicgen logs
postrotate
    # Update log rotation status
    echo "$(date -Iseconds): Log rotation completed for $1" >> /var/log/musicgen/rotation.log
    
    # Clean up old temporary files
    find /tmp/musicgen -name "*.tmp" -mtime +1 -delete 2>/dev/null || true
    
    # Update disk usage metrics
    if command -v df >/dev/null 2>&1; then
        df -h /var/log/musicgen >> /var/log/musicgen/disk-usage.log
    fi
    
    # Send rotation event to monitoring
    if [ -n "$MONITORING_WEBHOOK" ]; then
        curl -X POST "$MONITORING_WEBHOOK" \
            -H "Content-Type: application/json" \
            -d "{\"event\":\"log_rotated\",\"file\":\"$1\",\"timestamp\":\"$(date -Iseconds)\",\"hostname\":\"$(hostname)\"}" \
            2>/dev/null || true
    fi
endscript